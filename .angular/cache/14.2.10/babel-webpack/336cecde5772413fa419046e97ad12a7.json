{"ast":null,"code":"import { injectStyles, BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\nvar css_248z = \":root{--fc-list-event-dot-width:10px;--fc-list-event-hover-bg-color:#f5f5f5}.fc-theme-standard .fc-list{border:1px solid var(--fc-border-color)}.fc .fc-list-empty{align-items:center;background-color:var(--fc-neutral-bg-color);display:flex;height:100%;justify-content:center}.fc .fc-list-empty-cushion{margin:5em 0}.fc .fc-list-table{border-style:hidden;width:100%}.fc .fc-list-table tr>*{border-left:0;border-right:0}.fc .fc-list-sticky .fc-list-day>*{background:var(--fc-page-bg-color);position:sticky;top:0}.fc .fc-list-table thead{left:-10000px;position:absolute}.fc .fc-list-table tbody>tr:first-child th{border-top:0}.fc .fc-list-table th{padding:0}.fc .fc-list-day-cushion,.fc .fc-list-table td{padding:8px 14px}.fc .fc-list-day-cushion:after{clear:both;content:\\\"\\\";display:table}.fc-theme-standard .fc-list-day-cushion{background-color:var(--fc-neutral-bg-color)}.fc-direction-ltr .fc-list-day-text,.fc-direction-rtl .fc-list-day-side-text{float:left}.fc-direction-ltr .fc-list-day-side-text,.fc-direction-rtl .fc-list-day-text{float:right}.fc-direction-ltr .fc-list-table .fc-list-event-graphic{padding-right:0}.fc-direction-rtl .fc-list-table .fc-list-event-graphic{padding-left:0}.fc .fc-list-event.fc-event-forced-url{cursor:pointer}.fc .fc-list-event:hover td{background-color:var(--fc-list-event-hover-bg-color)}.fc .fc-list-event-graphic,.fc .fc-list-event-time{white-space:nowrap;width:1px}.fc .fc-list-event-dot{border:calc(var(--fc-list-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-list-event-dot-width)/2);box-sizing:content-box;display:inline-block;height:0;width:0}.fc .fc-list-event-title a{color:inherit;text-decoration:none}.fc .fc-list-event.fc-event-forced-url:hover a{text-decoration:underline}\";\ninjectStyles(css_248z);\n\nclass ListViewHeaderRow extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      textId: getUniqueDomId()\n    };\n  }\n\n  render() {\n    let {\n      theme,\n      dateEnv,\n      options,\n      viewApi\n    } = this.context;\n    let {\n      cellId,\n      dayDate,\n      todayRange\n    } = this.props;\n    let {\n      textId\n    } = this.state;\n    let dayMeta = getDateMeta(dayDate, todayRange); // will ever be falsy?\n\n    let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : ''; // will ever be falsy? also, BAD NAME \"alt\"\n\n    let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n    let renderProps = Object.assign({\n      date: dateEnv.toDate(dayDate),\n      view: viewApi,\n      textId,\n      text,\n      sideText,\n      navLinkAttrs: buildNavLinkAttrs(this.context, dayDate),\n      sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false)\n    }, dayMeta); // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n\n    return createElement(ContentContainer, {\n      elTag: \"tr\",\n      elClasses: ['fc-list-day', ...getDayClassNames(dayMeta, theme)],\n      elAttrs: {\n        'data-date': formatDayString(dayDate)\n      },\n      renderProps: renderProps,\n      generatorName: \"dayHeaderContent\",\n      customGenerator: options.dayHeaderContent,\n      defaultGenerator: renderInnerContent,\n      classNameGenerator: options.dayHeaderClassNames,\n      didMount: options.dayHeaderDidMount,\n      willUnmount: options.dayHeaderWillUnmount\n    }, InnerContent => // TODO: force-hide top border based on :first-child\n    createElement(\"th\", {\n      scope: \"colgroup\",\n      colSpan: 3,\n      id: cellId,\n      \"aria-labelledby\": textId\n    }, createElement(InnerContent, {\n      elTag: \"div\",\n      elClasses: ['fc-list-day-cushion', theme.getClass('tableCellShaded')]\n    })));\n  }\n\n}\n\nfunction renderInnerContent(props) {\n  return createElement(Fragment, null, props.text && createElement(\"a\", Object.assign({\n    id: props.textId,\n    className: \"fc-list-day-text\"\n  }, props.navLinkAttrs), props.text), props.sideText &&\n  /* not keyboard tabbable */\n  createElement(\"a\", Object.assign({\n    \"aria-hidden\": true,\n    className: \"fc-list-day-side-text\"\n  }, props.sideNavLinkAttrs), props.sideText));\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short'\n});\n\nclass ListViewEventRow extends BaseComponent {\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      options\n    } = context;\n    let {\n      seg,\n      timeHeaderId,\n      eventHeaderId,\n      dateHeaderId\n    } = props;\n    let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n    return createElement(EventContainer, Object.assign({}, props, {\n      elTag: \"tr\",\n      elClasses: ['fc-list-event', seg.eventRange.def.url && 'fc-event-forced-url'],\n      defaultGenerator: () => renderEventInnerContent(seg, context)\n      /* weird */\n      ,\n      seg: seg,\n      timeText: \"\",\n      disableDragging: true,\n      disableResizing: true\n    }), (InnerContent, eventContentArg) => createElement(Fragment, null, buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId), createElement(\"td\", {\n      \"aria-hidden\": true,\n      className: \"fc-list-event-graphic\"\n    }, createElement(\"span\", {\n      className: \"fc-list-event-dot\",\n      style: {\n        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor\n      }\n    })), createElement(InnerContent, {\n      elTag: \"td\",\n      elClasses: ['fc-list-event-title'],\n      elAttrs: {\n        headers: `${eventHeaderId} ${dateHeaderId}`\n      }\n    })));\n  }\n\n}\n\nfunction renderEventInnerContent(seg, context) {\n  let interactiveAttrs = getSegAnchorAttrs(seg, context);\n  return createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title);\n}\n\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n  let {\n    options\n  } = context;\n\n  if (options.displayEventTime !== false) {\n    let eventDef = seg.eventRange.def;\n    let eventInstance = seg.eventRange.instance;\n    let doAllDay = false;\n    let timeText;\n\n    if (eventDef.allDay) {\n      doAllDay = true;\n    } else if (isMultiDayRange(seg.eventRange.range)) {\n      // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n      } else {\n        doAllDay = true;\n      }\n    } else {\n      timeText = buildSegTimeText(seg, timeFormat, context);\n    }\n\n    if (doAllDay) {\n      let renderProps = {\n        text: context.options.allDayText,\n        view: context.viewApi\n      };\n      return createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-list-event-time'],\n        elAttrs: {\n          headers: `${timeHeaderId} ${dateHeaderId}`\n        },\n        renderProps: renderProps,\n        generatorName: \"allDayContent\",\n        customGenerator: options.allDayContent,\n        defaultGenerator: renderAllDayInner,\n        classNameGenerator: options.allDayClassNames,\n        didMount: options.allDayDidMount,\n        willUnmount: options.allDayWillUnmount\n      });\n    }\n\n    return createElement(\"td\", {\n      className: \"fc-list-event-time\"\n    }, timeText);\n  }\n\n  return null;\n}\n\nfunction renderAllDayInner(renderProps) {\n  return renderProps.text;\n}\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\n\n\nclass ListView extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.computeDateVars = memoize(computeDateVars);\n    this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n    this.state = {\n      timeHeaderId: getUniqueDomId(),\n      eventHeaderId: getUniqueDomId(),\n      dateHeaderIdRoot: getUniqueDomId()\n    };\n\n    this.setRootEl = rootEl => {\n      if (rootEl) {\n        this.context.registerInteractiveComponent(this, {\n          el: rootEl\n        });\n      } else {\n        this.context.unregisterInteractiveComponent(this);\n      }\n    };\n  }\n\n  render() {\n    let {\n      props,\n      context\n    } = this;\n    let {\n      dayDates,\n      dayRanges\n    } = this.computeDateVars(props.dateProfile);\n    let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n    return createElement(ViewContainer, {\n      elRef: this.setRootEl,\n      elClasses: ['fc-list', context.theme.getClass('table'), context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : ''],\n      viewSpec: context.viewSpec\n    }, createElement(Scroller, {\n      liquid: !props.isHeightAuto,\n      overflowX: props.isHeightAuto ? 'visible' : 'hidden',\n      overflowY: props.isHeightAuto ? 'visible' : 'auto'\n    }, eventSegs.length > 0 ? this.renderSegList(eventSegs, dayDates) : this.renderEmptyMessage()));\n  }\n\n  renderEmptyMessage() {\n    let {\n      options,\n      viewApi\n    } = this.context;\n    let renderProps = {\n      text: options.noEventsText,\n      view: viewApi\n    };\n    return createElement(ContentContainer, {\n      elTag: \"div\",\n      elClasses: ['fc-list-empty'],\n      renderProps: renderProps,\n      generatorName: \"noEventsContent\",\n      customGenerator: options.noEventsContent,\n      defaultGenerator: renderNoEventsInner,\n      classNameGenerator: options.noEventsClassNames,\n      didMount: options.noEventsDidMount,\n      willUnmount: options.noEventsWillUnmount\n    }, InnerContent => createElement(InnerContent, {\n      elTag: \"div\",\n      elClasses: ['fc-list-empty-cushion']\n    }));\n  }\n\n  renderSegList(allSegs, dayDates) {\n    let {\n      theme,\n      options\n    } = this.context;\n    let {\n      timeHeaderId,\n      eventHeaderId,\n      dateHeaderIdRoot\n    } = this.state;\n    let segsByDay = groupSegsByDay(allSegs); // sparse array\n\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, (nowDate, todayRange) => {\n      let innerNodes = [];\n\n      for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n        let daySegs = segsByDay[dayIndex];\n\n        if (daySegs) {\n          // sparse array, so might be undefined\n          let dayStr = formatDayString(dayDates[dayIndex]);\n          let dateHeaderId = dateHeaderIdRoot + '-' + dayStr; // append a day header\n\n          innerNodes.push(createElement(ListViewHeaderRow, {\n            key: dayStr,\n            cellId: dateHeaderId,\n            dayDate: dayDates[dayIndex],\n            todayRange: todayRange\n          }));\n          daySegs = sortEventSegs(daySegs, options.eventOrder);\n\n          for (let seg of daySegs) {\n            innerNodes.push(createElement(ListViewEventRow, Object.assign({\n              key: dayStr + ':' + seg.eventRange.instance.instanceId\n              /* are multiple segs for an instanceId */\n              ,\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: false,\n              timeHeaderId: timeHeaderId,\n              eventHeaderId: eventHeaderId,\n              dateHeaderId: dateHeaderId\n            }, getSegMeta(seg, todayRange, nowDate))));\n          }\n        }\n      }\n\n      return createElement(\"table\", {\n        className: 'fc-list-table ' + theme.getClass('table')\n      }, createElement(\"thead\", null, createElement(\"tr\", null, createElement(\"th\", {\n        scope: \"col\",\n        id: timeHeaderId\n      }, options.timeHint), createElement(\"th\", {\n        scope: \"col\",\n        \"aria-hidden\": true\n      }), createElement(\"th\", {\n        scope: \"col\",\n        id: eventHeaderId\n      }, options.eventHint))), createElement(\"tbody\", null, innerNodes));\n    });\n  }\n\n  _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n    return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n  }\n\n  eventRangesToSegs(eventRanges, dayRanges) {\n    let segs = [];\n\n    for (let eventRange of eventRanges) {\n      segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n    }\n\n    return segs;\n  }\n\n  eventRangeToSegs(eventRange, dayRanges) {\n    let {\n      dateEnv\n    } = this.context;\n    let {\n      nextDayThreshold\n    } = this.context.options;\n    let range = eventRange.range;\n    let allDay = eventRange.def.allDay;\n    let dayIndex;\n    let segRange;\n    let seg;\n    let segs = [];\n\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n      segRange = intersectRanges(range, dayRanges[dayIndex]);\n\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex\n        };\n        segs.push(seg); // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n\n        if (!seg.isEnd && !allDay && dayIndex + 1 < dayRanges.length && range.end < dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n          seg.end = range.end;\n          seg.isEnd = true;\n          break;\n        }\n      }\n    }\n\n    return segs;\n  }\n\n}\n\nfunction renderNoEventsInner(renderProps) {\n  return renderProps.text;\n}\n\nfunction computeDateVars(dateProfile) {\n  let dayStart = startOfDay(dateProfile.renderRange.start);\n  let viewEnd = dateProfile.renderRange.end;\n  let dayDates = [];\n  let dayRanges = [];\n\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart);\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1)\n    });\n    dayStart = addDays(dayStart, 1);\n  }\n\n  return {\n    dayDates,\n    dayRanges\n  };\n} // Returns a sparse array of arrays, segs grouped by their dayIndex\n\n\nfunction groupSegsByDay(segs) {\n  let segsByDay = []; // sparse array\n\n  let i;\n  let seg;\n\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg);\n  }\n\n  return segsByDay;\n}\n\nexport { ListView };","map":{"version":3,"names":["injectStyles","BaseComponent","getUniqueDomId","getDateMeta","buildNavLinkAttrs","ContentContainer","getDayClassNames","formatDayString","createFormatter","EventContainer","getSegAnchorAttrs","isMultiDayRange","buildSegTimeText","DateComponent","memoize","ViewContainer","Scroller","NowTimer","sortEventSegs","getSegMeta","sliceEventStore","intersectRanges","startOfDay","addDays","createElement","Fragment","css_248z","ListViewHeaderRow","constructor","arguments","state","textId","render","theme","dateEnv","options","viewApi","context","cellId","dayDate","todayRange","props","dayMeta","text","listDayFormat","format","sideText","listDaySideFormat","renderProps","Object","assign","date","toDate","view","navLinkAttrs","sideNavLinkAttrs","elTag","elClasses","elAttrs","generatorName","customGenerator","dayHeaderContent","defaultGenerator","renderInnerContent","classNameGenerator","dayHeaderClassNames","didMount","dayHeaderDidMount","willUnmount","dayHeaderWillUnmount","InnerContent","scope","colSpan","id","getClass","className","DEFAULT_TIME_FORMAT","hour","minute","meridiem","ListViewEventRow","seg","timeHeaderId","eventHeaderId","dateHeaderId","timeFormat","eventTimeFormat","eventRange","def","url","renderEventInnerContent","timeText","disableDragging","disableResizing","eventContentArg","buildTimeContent","style","borderColor","backgroundColor","headers","interactiveAttrs","title","displayEventTime","eventDef","eventInstance","instance","doAllDay","allDay","range","isStart","start","end","isEnd","allDayText","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","ListView","computeDateVars","eventStoreToSegs","_eventStoreToSegs","dateHeaderIdRoot","setRootEl","rootEl","registerInteractiveComponent","el","unregisterInteractiveComponent","dayDates","dayRanges","dateProfile","eventSegs","eventStore","eventUiBases","elRef","stickyHeaderDates","viewSpec","liquid","isHeightAuto","overflowX","overflowY","length","renderSegList","renderEmptyMessage","noEventsText","noEventsContent","renderNoEventsInner","noEventsClassNames","noEventsDidMount","noEventsWillUnmount","allSegs","segsByDay","groupSegsByDay","unit","nowDate","innerNodes","dayIndex","daySegs","dayStr","push","key","eventOrder","instanceId","isDragging","isResizing","isDateSelecting","isSelected","timeHint","eventHint","eventRangesToSegs","activeRange","nextDayThreshold","fg","eventRanges","segs","eventRangeToSegs","segRange","component","valueOf","add","dayStart","renderRange","viewEnd","i"],"sources":["/mnt/c/Users/MegaProyecto/Desktop/appcitas/node_modules/@fullcalendar/list/internal.js"],"sourcesContent":["import { injectStyles, BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nvar css_248z = \":root{--fc-list-event-dot-width:10px;--fc-list-event-hover-bg-color:#f5f5f5}.fc-theme-standard .fc-list{border:1px solid var(--fc-border-color)}.fc .fc-list-empty{align-items:center;background-color:var(--fc-neutral-bg-color);display:flex;height:100%;justify-content:center}.fc .fc-list-empty-cushion{margin:5em 0}.fc .fc-list-table{border-style:hidden;width:100%}.fc .fc-list-table tr>*{border-left:0;border-right:0}.fc .fc-list-sticky .fc-list-day>*{background:var(--fc-page-bg-color);position:sticky;top:0}.fc .fc-list-table thead{left:-10000px;position:absolute}.fc .fc-list-table tbody>tr:first-child th{border-top:0}.fc .fc-list-table th{padding:0}.fc .fc-list-day-cushion,.fc .fc-list-table td{padding:8px 14px}.fc .fc-list-day-cushion:after{clear:both;content:\\\"\\\";display:table}.fc-theme-standard .fc-list-day-cushion{background-color:var(--fc-neutral-bg-color)}.fc-direction-ltr .fc-list-day-text,.fc-direction-rtl .fc-list-day-side-text{float:left}.fc-direction-ltr .fc-list-day-side-text,.fc-direction-rtl .fc-list-day-text{float:right}.fc-direction-ltr .fc-list-table .fc-list-event-graphic{padding-right:0}.fc-direction-rtl .fc-list-table .fc-list-event-graphic{padding-left:0}.fc .fc-list-event.fc-event-forced-url{cursor:pointer}.fc .fc-list-event:hover td{background-color:var(--fc-list-event-hover-bg-color)}.fc .fc-list-event-graphic,.fc .fc-list-event-time{white-space:nowrap;width:1px}.fc .fc-list-event-dot{border:calc(var(--fc-list-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-list-event-dot-width)/2);box-sizing:content-box;display:inline-block;height:0;width:0}.fc .fc-list-event-title a{color:inherit;text-decoration:none}.fc .fc-list-event.fc-event-forced-url:hover a{text-decoration:underline}\";\ninjectStyles(css_248z);\n\nclass ListViewHeaderRow extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            textId: getUniqueDomId(),\n        };\n    }\n    render() {\n        let { theme, dateEnv, options, viewApi } = this.context;\n        let { cellId, dayDate, todayRange } = this.props;\n        let { textId } = this.state;\n        let dayMeta = getDateMeta(dayDate, todayRange);\n        // will ever be falsy?\n        let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n        // will ever be falsy? also, BAD NAME \"alt\"\n        let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n        let renderProps = Object.assign({ date: dateEnv.toDate(dayDate), view: viewApi, textId,\n            text,\n            sideText, navLinkAttrs: buildNavLinkAttrs(this.context, dayDate), sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false) }, dayMeta);\n        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n        return (createElement(ContentContainer, { elTag: \"tr\", elClasses: [\n                'fc-list-day',\n                ...getDayClassNames(dayMeta, theme),\n            ], elAttrs: {\n                'data-date': formatDayString(dayDate),\n            }, renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInnerContent, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => ( // TODO: force-hide top border based on :first-child\n        createElement(\"th\", { scope: \"colgroup\", colSpan: 3, id: cellId, \"aria-labelledby\": textId },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-list-day-cushion',\n                    theme.getClass('tableCellShaded'),\n                ] })))));\n    }\n}\nfunction renderInnerContent(props) {\n    return (createElement(Fragment, null,\n        props.text && (createElement(\"a\", Object.assign({ id: props.textId, className: \"fc-list-day-text\" }, props.navLinkAttrs), props.text)),\n        props.sideText && ( /* not keyboard tabbable */createElement(\"a\", Object.assign({ \"aria-hidden\": true, className: \"fc-list-day-side-text\" }, props.sideNavLinkAttrs), props.sideText))));\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: 'short',\n});\nclass ListViewEventRow extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"tr\", elClasses: [\n                'fc-list-event',\n                seg.eventRange.def.url && 'fc-event-forced-url',\n            ], defaultGenerator: () => renderEventInnerContent(seg, context) /* weird */, seg: seg, timeText: \"\", disableDragging: true, disableResizing: true }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId),\n            createElement(\"td\", { \"aria-hidden\": true, className: \"fc-list-event-graphic\" },\n                createElement(\"span\", { className: \"fc-list-event-dot\", style: {\n                        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor,\n                    } })),\n            createElement(InnerContent, { elTag: \"td\", elClasses: ['fc-list-event-title'], elAttrs: { headers: `${eventHeaderId} ${dateHeaderId}` } })))));\n    }\n}\nfunction renderEventInnerContent(seg, context) {\n    let interactiveAttrs = getSegAnchorAttrs(seg, context);\n    return (createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title));\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n    let { options } = context;\n    if (options.displayEventTime !== false) {\n        let eventDef = seg.eventRange.def;\n        let eventInstance = seg.eventRange.instance;\n        let doAllDay = false;\n        let timeText;\n        if (eventDef.allDay) {\n            doAllDay = true;\n        }\n        else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n            if (seg.isStart) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n            }\n            else if (seg.isEnd) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n            }\n            else {\n                doAllDay = true;\n            }\n        }\n        else {\n            timeText = buildSegTimeText(seg, timeFormat, context);\n        }\n        if (doAllDay) {\n            let renderProps = {\n                text: context.options.allDayText,\n                view: context.viewApi,\n            };\n            return (createElement(ContentContainer, { elTag: \"td\", elClasses: ['fc-list-event-time'], elAttrs: {\n                    headers: `${timeHeaderId} ${dateHeaderId}`,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }));\n        }\n        return (createElement(\"td\", { className: \"fc-list-event-time\" }, timeText));\n    }\n    return null;\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nclass ListView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.computeDateVars = memoize(computeDateVars);\n        this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n        this.state = {\n            timeHeaderId: getUniqueDomId(),\n            eventHeaderId: getUniqueDomId(),\n            dateHeaderIdRoot: getUniqueDomId(),\n        };\n        this.setRootEl = (rootEl) => {\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile);\n        let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n        return (createElement(ViewContainer, { elRef: this.setRootEl, elClasses: [\n                'fc-list',\n                context.theme.getClass('table'),\n                context.options.stickyHeaderDates !== false ?\n                    'fc-list-sticky' :\n                    '',\n            ], viewSpec: context.viewSpec },\n            createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?\n                this.renderSegList(eventSegs, dayDates) :\n                this.renderEmptyMessage())));\n    }\n    renderEmptyMessage() {\n        let { options, viewApi } = this.context;\n        let renderProps = {\n            text: options.noEventsText,\n            view: viewApi,\n        };\n        return (createElement(ContentContainer, { elTag: \"div\", elClasses: ['fc-list-empty'], renderProps: renderProps, generatorName: \"noEventsContent\", customGenerator: options.noEventsContent, defaultGenerator: renderNoEventsInner, classNameGenerator: options.noEventsClassNames, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-list-empty-cushion'] }))));\n    }\n    renderSegList(allSegs, dayDates) {\n        let { theme, options } = this.context;\n        let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state;\n        let segsByDay = groupSegsByDay(allSegs); // sparse array\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            let innerNodes = [];\n            for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n                let daySegs = segsByDay[dayIndex];\n                if (daySegs) { // sparse array, so might be undefined\n                    let dayStr = formatDayString(dayDates[dayIndex]);\n                    let dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n                    // append a day header\n                    innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, cellId: dateHeaderId, dayDate: dayDates[dayIndex], todayRange: todayRange }));\n                    daySegs = sortEventSegs(daySegs, options.eventOrder);\n                    for (let seg of daySegs) {\n                        innerNodes.push(createElement(ListViewEventRow, Object.assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, timeHeaderId: timeHeaderId, eventHeaderId: eventHeaderId, dateHeaderId: dateHeaderId }, getSegMeta(seg, todayRange, nowDate))));\n                    }\n                }\n            }\n            return (createElement(\"table\", { className: 'fc-list-table ' + theme.getClass('table') },\n                createElement(\"thead\", null,\n                    createElement(\"tr\", null,\n                        createElement(\"th\", { scope: \"col\", id: timeHeaderId }, options.timeHint),\n                        createElement(\"th\", { scope: \"col\", \"aria-hidden\": true }),\n                        createElement(\"th\", { scope: \"col\", id: eventHeaderId }, options.eventHint))),\n                createElement(\"tbody\", null, innerNodes)));\n        }));\n    }\n    _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    }\n    eventRangesToSegs(eventRanges, dayRanges) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    }\n    eventRangeToSegs(eventRange, dayRanges) {\n        let { dateEnv } = this.context;\n        let { nextDayThreshold } = this.context.options;\n        let range = eventRange.range;\n        let allDay = eventRange.def.allDay;\n        let dayIndex;\n        let segRange;\n        let seg;\n        let segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex,\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    }\n}\nfunction renderNoEventsInner(renderProps) {\n    return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n    let dayStart = startOfDay(dateProfile.renderRange.start);\n    let viewEnd = dateProfile.renderRange.end;\n    let dayDates = [];\n    let dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1),\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates, dayRanges };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n    let segsByDay = []; // sparse array\n    let i;\n    let seg;\n    for (i = 0; i < segs.length; i += 1) {\n        seg = segs[i];\n        (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n            .push(seg);\n    }\n    return segsByDay;\n}\n\nexport { ListView };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}